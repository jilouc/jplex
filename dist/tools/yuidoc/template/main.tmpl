#import re
#if $classname
    #set $classtruename = re.sub(r'[a-zA-Z]+\.', '', $classname)
#else
    #set $classtruename = "Coin"
#end if
#if $classname 
\#summary Class API for $classtruename from module $modulename
\#labels Class-$classname,Release-$projectname,Module-$modulename,API-Class
\#sidebar API${projectname}#echo $modulename.lower()#

= #if $access#`$access` #end if##if $static#`$static` #end if##if $final#`$final` #end if#Class *$classname* #if $extends# _extends [API$projectname#echo re.sub(r'(jplex)?\.', '', $extends)# $extends]_ #end if# =
    #if $uses
        - uses 
        #set $i=0
        #for $provider in $uses##if $i > 0#, #end if#
            $provider #set $i=$i+1##end for#
    #end if

== Description ==
#echo $description


#if $configs
== Config Table ==
|| *Name* || *Default Value* || *Description* ||
    #for $config in $configs
|| _${config.name}_ || `$config.default` || #if $config.deprecated#*Deprecated* $config.deprecated #end if# #echo re.sub('\r?\n', '<br />',$config.description)# ||
        #if $inherited.configs                      
=== Inherited Configs ===
            #for $superclassname in $inherited.configs 
                #for $config in $inherited.configs[$superclassname]
|| _${config.name}_ || `$config.default` || #if $config.deprecated#*Deprecated* $config.deprecated #end if# #echo re.sub('\r?\n', '<br />',$config.description)# ||
                #end for
            #end for
        #end if
    #end for  
#end if   

#if $events
== Event Table ==
|| *Name* || *Description* || *Parameters* ||
    #for $event in $events
|| _${event.name}_ || #if $event.deprecated#*Deprecated* $event.deprecated #end if# $event.description || #if $event.params# #for $param in $event.params# - `$param.name <$param.type>` #echo re.sub('\r?\n', '<br />',$param.description)# <br/>#end for# #end if# ||
        #if $inherited.events                      
=== Inherited Events ===
            #for $superclassname in $inherited.events 
                #for $event in $inherited.events[$superclassname]
|| _${event.name}_ || #if $event.deprecated#*Deprecated* $event.deprecated #end if# $event.description || #if $event.params# #for $param in $event.params# - `$param.name <$param.type>` #echo re.sub('\r?\n', '<br />',$param.description)# <br/>#end for# #end if# ||
                #end for
            #end for
        #end if
    #end for  
#end if            

#if $methods
== Methods ==                                
|| *Signature* || *Return Type* || *Description* ||
#for $method in $methods##if not $method.name.startswith('_')#|| `#echo $method.name#(#if $method.params##set $i=0##set $current = ""##for $param in $method.params##if $current != $param.name##if $i > 0#, #end if##set $i = $i + 1##set $current = $param.name#$param.name#end if##end for##end if#)` || `$method.return.type` || #echo re.sub('\r?\n','<br/>',$method.description)#<br /> #if $method.params##for $param in $method.params# - `$param.name <$param.type>`#echo re.sub('\r?\n','<br/>',$param.description)##end for##end if#||
#end if##end for
#if $inherited.methods                                   
=== Inherited Configs ===
#for $superclassname in $inherited.methods##set i=0##set l=len($inherited.methods[$superclassname])-1
 * [API$projectname#echo re.sub(r'(jplex)?\.', '', $superclassname)# $superclassname]: #for $method in $inherited.methods[$superclassname]##if not $method.name.startswith('_')# `#echo $method.name#`, #end if##end for#
#end for
#end if
#end if
#end if
#if $modulenames and not $classname
#if $modulename
\#summary Module API for module $modulename
\#labels Module-$modulename,Release-$projectname,API-Module
\#sidebar API${projectname}
#else    
\#summary API Index
\#labels Release-$projectname,API-Index
#end if
 * [API$projectname jPlex $projectname Release]#for $moduledef in $modulenames
 * [API$projectname#echo $moduledef.lower()# $moduledef] #if $moduledef == $modulename##for $classdef in $classnames
   * [API$projectname#echo re.sub(r'(jplex)?\.', '', $classdef)# #echo re.sub(r'[a-zA-Z]+\.', '', $classdef)#]#end for##end if##end for
#end if
