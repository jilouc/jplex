#summary Class API for MenuBar from module Components
#labels Class-jplex.components.MenuBar,Release-Pangolin,Module-Components,API-Class
#sidebar APIPangolincomponentsIndex

= Class *jplex.components.MenuBar*  _extends [APIPangolincommonComponent jplex.common.Component]_  =

== Description ==
!MenuBar component
Place a nice menu bar on your page. It's designed as 
the classical menu bars in applications.
It is possible to link events on terminal items. 
As an additional feature, you could specify a key shortcut
for this event.
The source for the menu items could be either:
<ul>
<li>a raw JS array. The definition of an item looks like:
 <pre>{ 
   name:"Item",
   click: clickHandler, //Reference to the function to be called at click
   icon: 'path/to/icon.png', // Path to a 16x16 icon which will be displayed on the left (optional)
   keySC: {
       code: Event.Key.Y, // Key code of the shortcut
       ctrl: true, // The shortcut requires the modifier Ctrl to be pressed
       text: "Ctrl+Y" // Text displayed at right of the item
   },
   items: [{...},{...},...] // Array of subitems
}</pre></li>
<li>XML document, fetched with Ajax.Request, with the following scheme:
{{{
<xmp>
    <menubar>
       <item name="Item" icon="path/to/icon.png">
            <click key="Event.Key.Y" ctrl="true" text="Ctrl+Y">
                <![CDATA[function() { ... }]]>
            </click>
            <items>
                <item>...</item>
                ...
            </items>
        </item>
    </menubar></xmp>
}}}</li>
<li>JSON document, fetched with Ajax.Request 
(exactly similar to the syntax of the JS Array)</li>
</ul>
Notice that this class is a singleton. Therefore it can't be instantiated twice.


== Event Table ==
<table border="1" cellspacing="0" cellpadding="5">
<tr><td> *Name* </td><td> *Description* </td><td> *Parameters* </td></tr>
<tr><td> _afterRenderEvent_ </td><td>  Event that fires after the rendering of the menu </td><td>  </td></tr>
<tr><td> _beforeRenderEvent_ </td><td>  Event that fires before the rendering of the menu </td><td>  </td></tr>
<tr><td> _onClickEvent_ </td><td>  Event that fires when the menu is clicked </td><td>   - `event <Event>`  the DOM Event information <br/>  </td></tr>
<tr><td> _onItemAddEvent_ </td><td>  Event that fires when an item is added to the menu
When an item is added, the handler is copied to the event of the same name of its submenu. </td><td>   - `item <MenuBar.Item>`  the added item <br/>  </td></tr>
</table>


== Properties ==
<table border="1" cellspacing="0" cellpadding="5">        
<tr><td> *Name* </td><td> *Type* </td><td> *Description* </td></tr>
<tr><td> _oItems_ </td><td> `Array` </td><td> ` `  Array containing the root items of the menu bar
(initial items AND dynamically added ones)</td></tr>
<tr><td> _SOURCE_AJAX_JSON_ </td><td> `Integer` </td><td> `static  `  Configuration constant indicating that menu items comes from a JSON document</td></tr>
<tr><td> _SOURCE_AJAX_XML_ </td><td> `Integer` </td><td> `static  `  Configuration constant indicating that menu items comes from a XML document</td></tr>
<tr><td> _SOURCE_JS_ARRAY_ </td><td> `Integer` </td><td> `static  `  Configuration constant indicating that menu items comes from a raw JS array</td></tr>

</table>



== Methods ==
<table border="1" cellspacing="0" cellpadding="5">                                
<tr><td> *Signature* </td><td> *Return Type* </td><td> *Description* </td></tr>
<tr><td> `addItem(oItem, nBefore)` </td><td> `MenuBar` </td><td> Adds the item oItem to the menu root.
If specified, adds it before the nBefore'th item<br />  - `oItem <Object>` Item to add (please refer to the doc above for item properties)<br/> - `nBefore <Integer>` Optional. Position of the item (by default the item is pushed at the end)<br/></td></tr>
<tr><td> `getInstance()` </td><td> `MenuBar` </td><td> Get the instance of the menu bar<br /> </td></tr>
<tr><td> `getItem(nIndex)` </td><td> `MenuBar.Submenu` </td><td> Get the submenu of the item at position nIndex<br />  - `nIndex <Integer>` Position of the item to get<br/></td></tr>
<tr><td> `hide()` </td><td> `void` </td><td> Hides every opened item of the menu<br /> </td></tr>
<tr><td> `removeItem(nIndex)` </td><td> `void` </td><td> Removes the item at position nIndex<br />  - `nIndex <nIndex>` Optional. Position of the item<br/></td></tr>
<tr><td> `render()` </td><td> `void` </td><td> Renders the menu bar root<br /> </td></tr>

</table>
=== Inherited Methods ===

 * [APIPangolincommonComponent jplex.common.Component]:  `$C`,  `cfg`,  `fireEvent`,  `getEvent`,  `lang`,  `locale`,  `setCfg`,  `setEvent`,  `unregister`, 
