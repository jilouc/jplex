#summary Class API for MenuBarItem from module Components
#labels Class-jplex.components.menubar.MenuBarItem,Release-Pangolin,Module-Components,API-Class
#sidebar APIPangolincomponentsIndex

= `private` `static` Class *jplex.components.menubar.MenuBarItem*  =

== Description ==
!MenuBar Item subclass




== Properties ==
<table border="1" cellspacing="0" cellpadding="5">        
<tr><td> *Name* </td><td> *Type* </td><td> *Description* </td></tr>
<tr><td> _me_ </td><td> `Element` </td><td> `private  `  The `<li>` HTML Element of the item</td></tr>

</table>



== Methods ==
<table border="1" cellspacing="0" cellpadding="5">                                
<tr><td> *Signature* </td><td> *Return Type* </td><td> *Description* </td></tr>
<tr><td> `getDetails()` </td><td> `Object` </td><td> Get details about the item. The method returns an object following this model:
<code>{
     label: the label of the item,
     icon: the path to the 16x16 icon,
     shortcut: {
         key: Key shortcut (Event.Key.<a key>),
         ctrl: Requires the ctrl key to be pressed or not,
         text: label of the helper text for the shortcut
     },
     link: link for the item,
     event: custom event on item activation (click or shortcut)
}</code>
Each field of the object is boolean equivalent to `false` if undefined.<br /> </td></tr>
<tr><td> `getHTMLElement()` </td><td> `Element` </td><td> Get the `<li>` HTMLElement of the item, extended by Prototype's Element.extend<br /> </td></tr>
<tr><td> `getMenu()` </td><td> `menubar.MenuBarSubmenu|menubar.MenuBar` </td><td> Get the menu that contains the item<br /> </td></tr>
<tr><td> `getSubmenu()` </td><td> `menubar.MenuBarSubmenu` </td><td> Get the submenu of the item (not its containing submenu)<br /> </td></tr>
<tr><td> `render(items)` </td><td> `void` </td><td> Renders the menu item (and creates all submenus)<br />  - `items <Array>` The sub-items of the item, defining its submenu<br/></td></tr>

</table>
